"use strict";
/**
 * @file fix no-console
 * @author YeonJuAn
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
//------------------------------------------------------------------------------
// Requirements
//------------------------------------------------------------------------------
const eslint_1 = require("eslint");
const no_console_1 = __importDefault(require("../../../lib/rules/no-console"));
const ruleTester = new eslint_1.RuleTester();
const error = { message: 'I can fix it', type: 'MemberExpression' };
exports.limitation = [
    { code: "foo = console.log('bar');" },
    { code: "foo(console.log('bar'));" },
    { code: "console.log('foo') + bar;" },
    { code: "foo = console.warn('bar');" },
    { code: "foo(console.warn(bar));" },
    { code: "console.warn('foo') + bar;" },
];
exports.fixables = [
    {
        code: "console.log('a')",
        output: '',
        errors: [error],
    },
    {
        code: `
function foo() {
  console.log('bar')
}`,
        output: `
function foo() {
  
}`,
        errors: [error],
    },
];
ruleTester.run('no-console', no_console_1.default, {
    valid: exports.limitation,
    invalid: exports.fixables,
});
