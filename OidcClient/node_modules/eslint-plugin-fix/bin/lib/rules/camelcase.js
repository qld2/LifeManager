"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = __importDefault(require("../utils"));
const ast_utils_1 = require("../ast-utils");
/**
 * Change snake_case to camelCase
 *
 * @param snake snake_case
 * @returns camelCase
 */
function snakeToCamel(snake) {
    return snake.replace(/(\_[a-z])/g, captured => captured.replace('_', '').toUpperCase());
}
/**
 * Map the non-fixable problem to fixable problem.
 *
 * @param   problem The non-fixable problem from base rule.
 * @returns Fixable Problem
 */
function mapReport(problem) {
    return utils_1.default.extendsProblem(problem, {
        fix(fixer) {
            const { node } = problem;
            if (ast_utils_1.isIdentifier(node)) {
                fixer.replaceText(node, snakeToCamel(node.name));
            }
            return fixer.replaceText(node, snakeToCamel(node.name));
        },
    });
}
exports.default = utils_1.default.mapBaseRule('camelcase', mapReport, 'code');
